package views

import "andrenormanlang/tarot-go-htmx/common"

templ Home(cards []common.Card, selectedCards []common.Card, meanings []string, isShuffling bool) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Free Tarot Reading</title>
			<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
			<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
			<link href="/static/css/styles.css" rel="stylesheet"/>
			<script src="/static/script/htmx.min.js"></script>
		</head>
		<body class="bg-gray-100 text-center py-4">
			<div class="container mx-auto px-2">
				<h1 class="text-3xl font-bold mb-2">Free Tarot Reading</h1>
				<p class="text-gray-700 mb-4">Get the answers you need with this 3-card Tarot spread.</p>
				<input type="text" placeholder="Enter your question or subject here (optional)" id="tarot-question" class="w-full max-w-lg mx-auto p-2 border border-gray-300 rounded mb-4"/>
				<!-- Shuffle/Stop Shuffle Button -->
				if isShuffling {
					<button hx-get="/stop-shuffle" hx-target="body" class="bg-red-500 text-white px-4 py-2 rounded-lg">Stop Shuffle</button>
				} else {
					<button hx-get="/shuffle-cards" hx-target="body" class="bg-purple-500 text-white px-4 py-2 rounded-lg">Shuffle Cards</button>
				}
				<!-- Shuffled Cards Container -->
				<div id="shuffled-cards" class="relative h-48 mt-4">
					<!-- Loop through each card -->
					for _, card := range cards {
						<div class="card-container" style="--card-index: {index};">
							if !isShuffling {
								<button hx-get={ "/select-card?card=" + card.Name } hx-target="body" class="bg-transparent">
									<img src="/images/CardBacks.png" alt="Card Back" class="w-full h-auto"/>
								</button>
							} else {
								<div class="bg-gray-400 p-1 rounded-lg animate-shuffle">
									<img src="/images/CardBacks.png" alt="Card Back" class="w-full h-auto"/>
								</div>
							}
						</div>
					}
				</div>
				<!-- Selected Cards Container -->
				<div id="selected-cards" class="mt-4 grid grid-cols-1 sm:grid-cols-3 gap-2">
					if selectedCards != nil {
						for _, card := range selectedCards {
							<div class="flip-card">
								<div class="flip-card-inner">
									<div class="flip-card-front">
										<img src={ "/images/" + card.Image } alt={ card.Name } class="w-full h-auto"/>
									</div>
									<div class="flip-card-back flex flex-col justify-between p-4">
										<h2 class="text-md font-semibold text-white">{ card.Name }</h2>
										<p class="text-sm text-white flex-grow overflow-y-auto">{ card.MeaningUp }</p>
										<button
											type="button"
											class="btn btn-primary mt-2"
											data-bs-toggle="modal"
											data-bs-target="#cardModal"
											onclick="populateModal('${JSON.stringify(card)}')"
										>
											View Full Description
										</button>
									</div>
								</div>
							</div>
						}
					}
				</div>
			</div>
			<!-- Modal for Extended Card Description -->
			<div class="modal fade" id="cardModal" tabindex="-1" aria-labelledby="cardModalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="cardModalLabel">Card Title</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<p id="modal-desc"></p>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
						</div>
					</div>
				</div>
			</div>
			<!-- Script to Reveal Cards -->
			<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
			<script src="/static/script/script.js"></script>
		</body>
	</html>
}
