package views

import "andrenormanlang/tarot-go-htmx/common"

templ Home(cards []common.Card, selectedCards []common.Card, meanings []string, isShuffling bool) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Free Tarot Reading</title>
			<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
			<script src="/static/htmx.min.js"></script>
			<style>
                @keyframes shuffle {
                    0% { transform: translateY(0); }
                    50% { transform: translateY(-10px); }
                    100% { transform: translateY(0); }
                }
                .animate-shuffle {
                    animation: shuffle 0.5s infinite;
                }
            </style>
		</head>
		<body class="bg-gray-100 text-center py-8">
			<div class="container mx-auto px-4">
				<h1 class="text-4xl font-bold mb-4">Free Tarot Reading</h1>
				<p class="text-gray-700 mb-8">Get the answers you need with this 3-card Tarot spread.</p>
				<input type="text" placeholder="Enter your question or subject here (optional)" id="tarot-question" class="w-full max-w-lg mx-auto p-2 border border-gray-300 rounded mb-6"/>
				if isShuffling {
					<button hx-get="/stop-shuffle" hx-target="body" class="bg-red-500 text-white px-6 py-2 rounded-lg">Stop Shuffle</button>
				} else {
					<button hx-get="/shuffle-cards" hx-target="body" class="bg-purple-500 text-white px-6 py-2 rounded-lg">Shuffle Cards</button>
				}
				<div id="shuffled-cards" class="mt-8 grid grid-cols-3 sm:grid-cols-7 md:grid-cols-7 gap-2">
					for _, card := range cards {
						if !isShuffling {
							<button hx-get={ "/select-card?card=" + card.Name } hx-target="body" class="bg-gray-400 p-2 rounded-lg transition-transform hover:scale-105">
								<img src="/static/images/card-back.jpg" alt="Card Back" class="w-full h-auto"/>
							</button>
						} else {
							<div class="bg-gray-400 p-2 rounded-lg animate-shuffle">
								<img src="/static/images/card-back.jpg" alt="Card Back" class="w-full h-auto"/>
							</div>
						}
					}
				</div>
				<div id="selected-cards" class="mt-8 grid grid-cols-1 sm:grid-cols-3 gap-4">
					for _, card := range selectedCards {
						<div class="bg-white shadow-md rounded-lg p-4">
							<img src={ "/static/images/" + card.Image } alt={ card.Name } class="mx-auto mb-4 w-full h-auto"/>
							<h2 class="text-lg font-semibold">{ card.Name }</h2>
						</div>
					}
				</div>
				if len(selectedCards) == 3 && !isShuffling {
					<div class="mt-8">
						<button hx-get="/reveal-meanings" hx-target="#meanings-display" class="bg-yellow-500 text-white px-6 py-2 rounded-lg">Reveal the Meaning</button>
					</div>
				}
				<div id="meanings-display" class="mt-8 grid grid-cols-1 sm:grid-cols-3 gap-4">
					for i, meaning := range meanings {
						<div class="bg-white shadow-md rounded-lg p-4">
							<h3 class="text-lg font-semibold mb-2">{ selectedCards[i].Name }</h3>
							<p class="text-gray-700">{ meaning }</p>
						</div>
					}
				</div>
			</div>
		</body>
	</html>
}
